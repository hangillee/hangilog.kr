{
  "title": "Project",
  "list": [
    {
      "projects": [
        {
          "title": {
            "text": "투룻(touroot)",
            "githubLink": "https://github.com/woowacourse-teams/2024-touroot",
            "otherLink": "Https://touroot.kr"
          },
          "description": "우아한테크코스에서 진행한 팀 프로젝트입니다. 여행기와 여행 계획을 쉽게 작성하고 상호 전환하며 여행 관련 정보를 공유할 수 있는 커뮤니티 서비스입니다. 프론트엔드 3명, 백엔드 5명으로 구성된 팀으로 서비스를 개발했습니다. ",
          "startDate": "2024.07",
          "endDate": "2024.11",
          "which": [
            {
              "title": "DB 테이블 반정규화와 컬럼 인덱스 설정을 통한 조회 성능 개선",
              "content": [
                {
                  "main": "서비스 QA 과정에서 메인 페이지 로딩 시간이 1초를 초과하는 것을 확인했습니다.",
                  "sub": ["개선 전에는 매번 COUNT 함수를 활용해 각 여행기의 좋아요 개수를 계산했습니다."]
                },
                {
                  "main": "<strong>조회 성능</strong>을 개선하기 위해 여행기와 여행기 좋아요 테이블을 <strong>반정규화</strong>했습니다.",
                  "sub": [
                    "여행기 테이블에 좋아요 개수 컬럼을 추가하고 해당 컬럼에 <strong>인덱스</strong>를 설정했습니다.",
                    "여행기 10만 건, 건당 좋아요 50개 기준 평균 <strong style='background-color:#6db33f5f'>1.5573초 → 0.0024초</strong>로 개선됐습니다."
                  ]
                }
              ]
            },
            {
              "title": "Querydsl을 활용한 여행기 제목 및 작성자 기준 검색 기능 구현",
              "content": [
                {
                  "main": "Querydsl을 이용해 복잡한 검색 조건을 <strong>동적으로 처리할 수 있는 쿼리</strong>를 작성했습니다."
                },
                {
                  "main": "띄어쓰기 차이로 인한 검색 결과 누락을 방지하기 위해 REPLACE 함수를 활용했습니다."
                },
                {
                  "main": "<strong>Querydsl 기술 도입</strong>을 주도하여 동료들의 검색 기능 확장에 도움을 줬습니다.",
                  "sub": ["검색 결과 필터링과 나라 기준 검색 기능을 추가 구현할 때, 팀원 모두 Querydsl을 활용했습니다."]
                }
              ]
            },
            {
              "title": "핵심 도메인 여행기(Travelogue) 설계 및 테스트 작성",
              "content": [
                {
                  "main": "투룻 서비스의 핵심 도메인인 여행기(Travelogue)를 설계하고 REST API를 구현했습니다."
                },
                {
                  "main": "<strong>JUnit 5</strong>와 <strong>REST Assured</strong>를 활용해 여행기 도메인에 대한 <strong>테스트</strong>를 작성했습니다.",
                  "sub": [
                    "<strong>Test Fixture</strong>를 작성해 테스트 데이터를 효율적으로 적재할 수 있도록 했습니다.",
                    "<strong>테스트</strong>를 서로 <strong>격리</strong>하기 위해 TRUNCATE를 활용한 DB 초기화 유틸 클래스를 작성했습니다."
                  ]
                },
                {
                  "main": "일대다 관계가 많은 엔티티의 복잡한 생성 로직을 디자인 패턴을 활용해 추상화했습니다."
                }
              ]
            },
            {
              "title": "AWS 서비스를 활용한 백엔드 인프라 구성",
              "content": [
                {
                  "main": "<strong>서비스</strong>의 <strong>로그</strong>와 <strong>인프라</strong> 환경의 <strong>가용성</strong>을 <strong>모니터링</strong>하기 위해 <strong>AWS CloudWatch</strong>를 활용했습니다."
                },
                {
                  "main": "<strong>임계치 경보 알림 파이프라인</strong>을 구축하기 위해 <strong>AWS SNS</strong>와 <strong>Lambda</strong>를 사용한 경험이 있습니다."
                },
                {
                  "main": "서비스 <strong>SPOF 분석</strong>을 통해 인프라적인 위험 요소를 파악하고 해결하고자 노력했습니다.",
                  "sub": [
                    "저사양 EC2(t4g.micro)의 부하를 분산하기 위해 <strong>스케일 아웃</strong>과 <strong>AWS ELB</strong>를 활용했습니다.",
                    "쓰기 작업이 많은 서비스 특성상, DB 부하를 분산하기 위해 <strong>DB Replication</strong>을 적용했습니다.",
                    "예기치 못한 AZ 전체 장애를 대비해 <strong>서로 다른 AZ</strong>에 EC2를 두어 가용성을 높였습니다."
                  ]
                },
                {
                  "main": "Nginx, Docker와 Github Actions를 활용해 <strong>무중단 배포 환경</strong>을 구성했습니다."
                },
                {
                  "main": "Github Actions의 Self-hosted Runner를 활용해 <strong>CI/CD 파이프라인</strong>을 구축했습니다."
                }
              ]
            }
          ],
          "techStack": [
            "Java",
            "Spring Boot",
            "MySQL",
            "QueryDSL",
            "JUnit 5",
            "REST Assured",
            "Swagger",
            "AWS",
            "Docker",
            "Nginx",
            "Github Actions"
          ]
        }
      ]
    }
  ]
}
